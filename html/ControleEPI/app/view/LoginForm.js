/*
 * File: app/view/LoginForm.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TaskList.view.LoginForm', {
    extend: 'Ext.window.Window',
    alias: 'widget.loginform',

    requires: [
        'TaskList.view.LoginFormViewModel',
        'TaskList.view.LoginFormViewController',
        'Ext.form.Panel',
        'Ext.toolbar.Toolbar',
        'Ext.toolbar.Fill',
        'Ext.button.Button',
        'Ext.form.field.Text'
    ],

    controller: 'loginform',
    viewModel: {
        type: 'loginform'
    },
    autoShow: true,
    height: 170,
    width: 360,
    layout: 'fit',
    closable: false,
    title: 'Login',
    modal: true,

    items: [
        {
            xtype: 'form',
            defaults: {
                xtype: 'textfield',
                anchor: '100%',
                labelWidth: 60,
                allowBlank: false,
                vtype: 'alphanum',
                minLength: 3,
                msgTarget: 'under'
            },
            bodyPadding: 15,
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    items: [
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'button',
                            itemId: 'cancel',
                            text: 'Cancelar',
                            listeners: {
                                click: 'onCancelClick'
                            }
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                var formDialog = button.up('loginform');
                                var form = button.up('form');

                                // fire custom event for the controller to handle
                                formDialog.fireEvent('login', formDialog, form, form.getValues());
                            },
                            formBind: true,
                            itemId: 'submit',
                            text: 'Login'
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'textfield',
                    anchor: '100%',
                    fieldLabel: 'Usu√°rio',
                    name: 'loginUsername',
                    maxLength: 30
                },
                {
                    xtype: 'textfield',
                    anchor: '100%',
                    fieldLabel: 'Senha',
                    msgTarget: 'side',
                    name: 'loginPassword',
                    inputType: 'password',
                    enableKeyEvents: true,
                    maxLength: 30
                }
            ]
        }
    ]

});