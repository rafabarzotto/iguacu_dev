/*
 * File: app/view/TasksViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TaskList.view.TasksViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.tasks',

    showView: function(view) {
        var layout = this.getReferences().display.getLayout();
        layout.setActiveItem(this.lookupReference(view));
    },

    select: function(rowmodel, record, index, eOpts) {
        // Set selected record
        this.getViewModel().set('record', record);

        // Show details
        this.showView('details');
    },

    save: function(button, e, eOpts) {
        var form = this.getReferences().form.getForm(),
            record = form.getRecord(),
            values = form.getValues(),
            grid = Ext.ComponentQuery.query('grid')[0],
            store = grid.getStore(),
            now = new Date();

        if (record) {
            console.log('edicao');
            console.log(record);
            record.set(values);
            console.log(record);

        } else {
            console.log('novo');
            var novousuario = Ext.create('TaskList.model.ControleEPI', {
                RE: values.RE,
                Colaborador: values.Colaborador,
                Cargo: values.Cargo,
                Setor: values.Setor,
                EPI: values.EPI,
                Data: values.Data,
                Responsavel: values.Responsavel
            });

            console.log(novousuario);
            store.add(novousuario);

        }

        store.sync();
        store.removeAll();
        Ext.Msg.alert('Salvar', 'Salvo Com Sucesso!', function(btn){
            if(btn == 'ok'){
                console.log('ok');
                store.load();
            }
        });



        // Valid
        //if (form.isValid()) {

        // Update associated record with values
        //form.updateRecord();

        // Set updated date/time
        //record.set('updatedAt', now);

        // Add to store if new record
        //if (record.phantom) {

        // Set created date/time
        //record.set('Data', now);

        // TODO: Assign the record's ID from data source
        // Normally, this value would be auto-generated,
        // or returned from the server
        //var id = store.count() + 1;
        //record.set('ID', id);

        // Add to store
        //store.add(record);

        //}

        // Commit changes
        //store.commitChanges();

        // Display record
        this.select(this, record);

        //}
    },

    cancelEdit: function(button, e, eOpts) {
        // Show details
        this.showView('details');
    },

    add: function(button, e, eOpts) {
        var formPanel = this.getReferences().form,
            form = formPanel.getForm();
        //newRecord = Ext.create('TaskView.Model.ControleEPI');

        // Clear form
        form.reset();

        // Set record
        //form.loadRecord(newRecord);

        // Set title
        formPanel.setTitle('Adicionar ao Controle de EPI');

        // Show form
        this.showView('form');
    },

    edit: function(button, e, eOpts) {
        var formPanel = this.getReferences().form,
            form = formPanel.getForm(),
            record = this.getViewModel().get('record');

        // Load record model into form
        form.loadRecord(record);

        // Set title
        formPanel.setTitle('Edit Task');

        // Show form
        this.showView('form');
    },

    remove: function(button, e, eOpts) {
        var me = this;

        // Ask user to confirm this action
        Ext.Msg.confirm('Confirm Delete', 'Are you sure you want to delete this task?', function(result) {

            // User confirmed yes
            if (result == 'yes') {

                var record = me.getViewModel().get('record'),
                    store = me.getStore('tasks');

                // Delete record from store
                store.remove(record);

                // Hide display
                me.showView('selectMessage');

            }

        });
    }

});
